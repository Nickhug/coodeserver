# fly.toml app configuration file for coodeserver
# See https://fly.io/docs/reference/configuration/ for information about how to use this file.

app = "coodeserver" # Make sure this matches your Fly.io app name
primary_region = "iad"   # Choose a region close to you or your users

[build]
  # We are using a Dockerfile, so no builder settings are needed here.
  # Fly will automatically detect and use the Dockerfile.

[env]
  PORT = "3000"
  NODE_ENV = "production"
  # Add any other non-secret environment variables required by your app at runtime.
  # Example: NEXT_PUBLIC_APP_URL=https://coodeserver.fly.dev

[http_service]
  internal_port = 3000
  force_https = true
  auto_stop_machines = false # Set to false for persistent WebSockets
  auto_start_machines = true
  min_machines_running = 1   # Keep at least one machine running for WebSockets
  processes = ["app"]      # Matches the default process group

  # Health check configuration - Next.js apps often don't have a simple '/' health endpoint
  # Consider creating a dedicated health check API route (e.g., /api/health)
  # [http_service.checks] # Note: Checks would be nested under [http_service], not [[...]]
  #   interval = "10s"
  #   timeout = "2s"
  #   grace_period = "5s"
  #   method = "GET"
  #   path = "/api/health" # Example health check path
  #   protocol = "http"

# Optional: Define machine resources (default is shared-cpu-1x 256MB)
# [[vm]] # Keep double brackets if defining multiple VM types
#   cpu_kind = "shared"
#   cpus = 1
#   memory_mb = 512 